{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vttur\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\\\u0423\\u0447\\u0451\\u0431\\u0430 \\u0432 \\u0432\\u0443\\u0437\\u0435\\\\WEB \\u0442\\u0435\\u0445\\u043D\\u043E\\u043B\\u043E\\u0433\\u0438\\u0438(\\u041A\\u0420)\\\\\\u041F\\u0440\\u0430\\u043A\\u0442\\u0438\\u043A\\u0430\\\\baikal-guide\\\\client\\\\src\\\\pages\\\\AdminPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminPage = () => {\n  _s();\n  const [places, setPlaces] = useState([]);\n  const [newPlace, setNewPlace] = useState({\n    name: '',\n    description: '',\n    region: '',\n    image_url: ''\n  });\n  useEffect(() => {\n    fetchPlaces();\n  }, []);\n  const fetchPlaces = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/places');\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setPlaces(data);\n    } catch (error) {\n      console.error('Error fetching places:', error);\n      setPlaces([]); // Установите пустой массив в случае ошибки\n    }\n  };\n  const handleInputChange = e => {\n    setNewPlace({\n      ...newPlace,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:5000/api/places', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newPlace)\n      });\n      if (response.ok) {\n        fetchPlaces();\n        setNewPlace({\n          name: '',\n          description: '',\n          region: '',\n          image_url: ''\n        });\n      }\n    } catch (error) {\n      console.error('Error adding place:', error);\n    }\n  };\n  const handleDelete = async id => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/places/${id}`, {\n        method: 'DELETE'\n      });\n      if (response.ok) {\n        fetchPlaces();\n      }\n    } catch (error) {\n      console.error('Error deleting place:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0410\\u0434\\u043C\\u0438\\u043D \\u043F\\u0430\\u043D\\u0435\\u043B\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: newPlace.name,\n        onChange: handleInputChange,\n        placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"description\",\n        value: newPlace.description,\n        onChange: handleInputChange,\n        placeholder: \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"region\",\n        value: newPlace.region,\n        onChange: handleInputChange,\n        placeholder: \"\\u0420\\u0435\\u0433\\u0438\\u043E\\u043D\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"image_url\",\n        value: newPlace.image_url,\n        onChange: handleInputChange,\n        placeholder: \"URL \\u0438\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u044F\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043C\\u0435\\u0441\\u0442\\u043E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u043C\\u0435\\u0441\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), Array.isArray(places) && places.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: places.map(place => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [place.name, \" - \", place.region, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(place.id),\n          children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this)]\n      }, place.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u041D\\u0435\\u0442 \\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0445 \\u043C\\u0435\\u0441\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminPage, \"VRPC1lmSOAZ5L52p+d5BBl+Dx6c=\");\n_c = AdminPage;\nexport default AdminPage;\nvar _c;\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AdminPage","_s","places","setPlaces","newPlace","setNewPlace","name","description","region","image_url","fetchPlaces","response","fetch","ok","Error","data","json","error","console","handleInputChange","e","target","value","handleSubmit","preventDefault","method","headers","body","JSON","stringify","handleDelete","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder","required","Array","isArray","length","map","place","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Vttur/OneDrive/Рабочий стол/Учёба в вузе/WEB технологии(КР)/Практика/baikal-guide/client/src/pages/AdminPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst AdminPage = () => {\r\n  const [places, setPlaces] = useState([]);\r\n  const [newPlace, setNewPlace] = useState({ name: '', description: '', region: '', image_url: '' });\r\n\r\n  useEffect(() => {\r\n    fetchPlaces();\r\n  }, []);\r\n\r\n  const fetchPlaces = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/places');\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n      const data = await response.json();\r\n      setPlaces(data);\r\n    } catch (error) {\r\n      console.error('Error fetching places:', error);\r\n      setPlaces([]); // Установите пустой массив в случае ошибки\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setNewPlace({ ...newPlace, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/places', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(newPlace),\r\n      });\r\n      if (response.ok) {\r\n        fetchPlaces();\r\n        setNewPlace({ name: '', description: '', region: '', image_url: '' });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error adding place:', error);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/places/${id}`, {\r\n        method: 'DELETE',\r\n      });\r\n      if (response.ok) {\r\n        fetchPlaces();\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting place:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Админ панель</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={newPlace.name}\r\n          onChange={handleInputChange}\r\n          placeholder=\"Название\"\r\n          required\r\n        />\r\n        <textarea\r\n          name=\"description\"\r\n          value={newPlace.description}\r\n          onChange={handleInputChange}\r\n          placeholder=\"Описание\"\r\n          required\r\n        ></textarea>\r\n        <input\r\n          type=\"text\"\r\n          name=\"region\"\r\n          value={newPlace.region}\r\n          onChange={handleInputChange}\r\n          placeholder=\"Регион\"\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"image_url\"\r\n          value={newPlace.image_url}\r\n          onChange={handleInputChange}\r\n          placeholder=\"URL изображения\"\r\n          required\r\n        />\r\n        <button type=\"submit\">Добавить место</button>\r\n      </form>\r\n      <h2>Список мест</h2>\r\n      {Array.isArray(places) && places.length > 0 ? (\r\n        <ul>\r\n          {places.map(place => (\r\n            <li key={place.id}>\r\n              {place.name} - {place.region}\r\n              <button onClick={() => handleDelete(place.id)}>Удалить</button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p>Нет доступных мест</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}